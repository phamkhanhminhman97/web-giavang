import Navbar from "@/components/Navbar";
import Hero from "@/components/Hero";
import GoldTabs from "@/components/GoldTabs";
import PriceInfo from "@/components/PriceInfo";
import Footer from "@/components/Footer";
import SEO from "@/components/SEO";
// Lazy load heavy components for better performance
import { lazy, Suspense, useState, useEffect } from "react";
const MarketTrend = lazy(() => import("@/components/MarketTrend"));
const GoldComparison = lazy(() => import("@/components/GoldComparison"));
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Share2, Bell, ArrowRight, ChevronRight, Search as SearchIcon, TrendingUp, Shield, Award, Clock, BarChart3, Scale, LineChart, Gem, Mail, MessageSquare, CheckCircle, Users, Eye, Zap, Star, X, Wifi } from "lucide-react";
import FaqItem from "@/components/FaqItem";
import { useFormattedDate } from "@/hooks/use-formatted-date";
import { useScrollEffect } from "@/hooks/use-scroll-effect";
import { GoldPriceProvider } from "@/contexts/GoldPriceContext";
import { useSearchParams } from "react-router-dom";
import { useToast } from "@/hooks/use-toast";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/components/ui/dialog";

const Index = () => {
  const [timeFilter, setTimeFilter] = useState("today");
  const scrolled = useScrollEffect(50);
  const [searchParams, setSearchParams] = useSearchParams();
  const searchQuery = searchParams.get("q");
  const [searchResults, setSearchResults] = useState<any[]>([]);
  const [loading, setLoading] = useState(false);
  const [searchInput, setSearchInput] = useState("");
  const [showPriceAlert, setShowPriceAlert] = useState(false);
  const [alertEmail, setAlertEmail] = useState("");
  const [alertThreshold, setAlertThreshold] = useState("100000");
  const [isOnline, setIsOnline] = useState(true);
  const [lastUpdate, setLastUpdate] = useState(new Date());
  const [userCount] = useState(12847); // Mock user count
  const { toast } = useToast();
  
  // Use our custom hook for formatted date/time
  const { formattedDateTime } = useFormattedDate();

  // Handle search functionality
  useEffect(() => {
    if (searchQuery) {
      setLoading(true);
      
      // In a real implementation, you would fetch search results from an API
      // For now, we'll just simulate a delay and return empty results
      const timer = setTimeout(() => {
        setSearchResults([]);
        setLoading(false);
      }, 500);
      
      return () => clearTimeout(timer);
    }
  }, [searchQuery]);

  // Simulate live updates
  useEffect(() => {
    const interval = setInterval(() => {
      setLastUpdate(new Date());
    }, 60000); // Update every minute
    
    return () => clearInterval(interval);
  }, []);

  // Monitor connection status
  useEffect(() => {
    const handleOnline = () => setIsOnline(true);
    const handleOffline = () => setIsOnline(false);
    
    window.addEventListener('online', handleOnline);
    window.addEventListener('offline', handleOffline);
    
    return () => {
      window.removeEventListener('online', handleOnline);
      window.removeEventListener('offline', handleOffline);
    };
  }, []);

  // Share handler with Web Share API fallback
  const handleShare = async () => {
    try {
      const shareData = {
        title: "Gi√° V√†ng 24/7 - GiaVang247",
        text: "C·∫≠p nh·∫≠t gi√° v√†ng Vi·ªát Nam SJC, DOJI, PNJ 24/7",
        url: typeof window !== "undefined" ? window.location.href : "/",
      };
      if (navigator.share) {
        await navigator.share(shareData);
      } else {
        await navigator.clipboard.writeText(shareData.url);
        toast({ title: "ƒê√£ sao ch√©p li√™n k·∫øt", description: "Link ƒë√£ ƒë∆∞·ª£c copy v√†o clipboard" });
      }
    } catch (_) {
      toast({ title: "Kh√¥ng th·ªÉ chia s·∫ª", description: "Vui l√≤ng th·ª≠ l·∫°i sau", variant: "destructive" });
    }
  };

  // Notification handler
  const handleNotify = () => {
    setShowPriceAlert(true);
  };

  // Price alert submission
  const handlePriceAlertSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (!alertEmail || !alertThreshold) return;
    
    // Simulate API call
    toast({
      title: "üîî ƒêƒÉng k√Ω th√†nh c√¥ng!",
      description: `B·∫°n s·∫Ω nh·∫≠n c·∫£nh b√°o khi gi√° thay ƒë·ªïi ‚â• ${Number(alertThreshold).toLocaleString('vi-VN')}ƒë/l∆∞·ª£ng`,
    });
    
    setShowPriceAlert(false);
    setAlertEmail("");
    setAlertThreshold("100000");
  };

  // If there's a search query, show search results
  if (searchQuery) {
    return (
      <div className="min-h-screen flex flex-col bg-gradient-to-b from-white to-gold-muted/5">
        <SEO pageName="home" />
        <Navbar />
        
        <main className="flex-grow">
          <div className="container mx-auto px-4 py-8">
            <h1 className="text-2xl font-bold mb-6">K·∫øt qu·∫£ t√¨m ki·∫øm cho: "{searchQuery}"</h1>

            {loading ? (
              <div className="flex justify-center py-8">
                <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-gold-dark"></div>
              </div>
            ) : searchResults.length > 0 ? (
              <div className="space-y-6">
                {searchResults.map((result, index) => (
                  <div key={index} className="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
                    <h2 className="text-lg font-semibold text-gold-dark">{result.title}</h2>
                    <p className="text-gray-600 mt-2">{result.description}</p>
                  </div>
                ))}
              </div>
            ) : (
              <div className="text-center py-8">
                <p className="text-lg text-gray-600">Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£ n√†o cho "{searchQuery}"</p>
                <p className="mt-4">Vui l√≤ng th·ª≠ l·∫°i v·ªõi t·ª´ kh√≥a kh√°c ho·∫∑c quay l·∫°i trang ch·ªß.</p>
              </div>
            )}
          </div>
        </main>
        
        <Footer />
      </div>
    );
  }

  // Regular home page content
  return (
    <GoldPriceProvider>
      <div className="min-h-screen flex flex-col bg-gradient-to-b from-white to-gold-muted/5">
      <SEO pageName="home" />
      <Navbar />
      
      <main className="flex-grow">
        {/* Hero Banner */}
        <Hero />

        {/* Sticky mini-header on scroll */}
        {scrolled && (
          <div className="fixed top-2 inset-x-0 px-4 z-50">
            <div className="mx-auto max-w-5xl bg-white/90 backdrop-blur-md border border-gold-light/40 shadow-lg rounded-full flex items-center justify-between px-4 py-2">
              <div className="text-xs md:text-sm text-slate-700">
                <span className="inline-flex items-center gap-1">
                  <Clock size={14} className="text-gold-dark" />
                  C·∫≠p nh·∫≠t: <span className="font-medium">{formattedDateTime}</span>
                </span>
              </div>
              <div className="flex items-center gap-2">
                <button onClick={handleNotify} className="text-xs md:text-sm px-3 py-1.5 rounded-full bg-gold-light/10 border border-gold-light/60 hover:border-gold hover:bg-gold-light/20 transition-all">
                  <span className="inline-flex items-center gap-1"><Bell size={14} className="text-gold-dark" /> B√°o gi√°</span>
                </button>
                <button onClick={handleShare} className="text-xs md:text-sm px-3 py-1.5 rounded-full bg-gold-light/10 border border-gold-light/60 hover:border-gold hover:bg-gold-light/20 transition-all">
                  <span className="inline-flex items-center gap-1"><Share2 size={14} className="text-gold-dark" /> Chia s·∫ª</span>
                </button>
              </div>
            </div>
          </div>
        )}
        
        {/* Enhanced Trust Badges with Social Proof */}
        <div className="bg-white/60 backdrop-blur-sm border-y border-gold-light/20 py-4">
          <div className="container mx-auto px-4">
            <div className="flex flex-wrap items-center justify-center gap-4 md:gap-8 text-xs text-slate-600">
              <div className="flex items-center gap-2">
                <div className="relative">
                  <Wifi size={16} className={`${isOnline ? 'text-green-500' : 'text-red-500'}`} />
                  {isOnline && <div className="absolute -top-1 -right-1 w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>}
                </div>
                <span className="font-medium">{isOnline ? 'Tr·ª±c tuy·∫øn' : 'Ngo·∫°i tuy·∫øn'}</span>
              </div>
              <div className="flex items-center gap-2">
                <Users size={16} className="text-gold-dark" />
                <span><span className="font-semibold text-gold-dark">{userCount.toLocaleString('vi-VN')}</span> ng∆∞·ªùi ƒëang xem</span>
              </div>
              <div className="flex items-center gap-2">
                <Shield size={16} className="text-gold-dark" />
                <span>D·ªØ li·ªáu ch√≠nh th·ª©c</span>
              </div>
              <div className="flex items-center gap-2">
                <Clock size={16} className="text-gold-dark" />
                <span>C·∫≠p nh·∫≠t m·ªói ph√∫t</span>
              </div>
              <div className="flex items-center gap-2">
                <Award size={16} className="text-gold-dark" />
                <span>7+ ngu·ªìn uy t√≠n</span>
              </div>
            </div>
          </div>
        </div>

        {/* Quick Navigation Chips */}
        <div className="container mx-auto px-4 py-6">
          <div className="flex flex-wrap justify-center gap-3 mb-8">
            <a href="#price-info" className="inline-flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-gold-light/20 to-gold-muted/20 rounded-full border border-gold-light/30 text-sm font-medium text-slate-700 hover:bg-gold-light/30 hover:border-gold-light transition-all shadow-sm hover:shadow-md group">
              <BarChart3 size={16} className="text-gold-dark group-hover:scale-110 transition-transform" />
              Gi√° SJC h√¥m nay
            </a>
            <a href="#comparison" className="inline-flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-gold-light/20 to-gold-muted/20 rounded-full border border-gold-light/30 text-sm font-medium text-slate-700 hover:bg-gold-light/30 hover:border-gold-light transition-all shadow-sm hover:shadow-md group">
              <Scale size={16} className="text-gold-dark group-hover:scale-110 transition-transform" />
              So s√°nh DOJI vs PNJ
            </a>
            <a href="/gold-chart" className="inline-flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-gold-light/20 to-gold-muted/20 rounded-full border border-gold-light/30 text-sm font-medium text-slate-700 hover:bg-gold-light/30 hover:border-gold-light transition-all shadow-sm hover:shadow-md group">
              <LineChart size={16} className="text-gold-dark group-hover:scale-110 transition-transform" />
              Bi·ªÉu ƒë·ªì 7 ng√†y
            </a>
            <a href="#faq-section" className="inline-flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-gold-light/20 to-gold-muted/20 rounded-full border border-gold-light/30 text-sm font-medium text-slate-700 hover:bg-gold-light/30 hover:border-gold-light transition-all shadow-sm hover:shadow-md group">
              <Gem size={16} className="text-gold-dark group-hover:scale-110 transition-transform" />
              Nh·∫´n 9999
            </a>
          </div>

          {/* Recent Activity Feed */}
          <div className="max-w-4xl mx-auto mb-8">
            <div className="bg-white/80 backdrop-blur-sm rounded-2xl border border-gold-light/30 p-4 shadow-sm">
              <div className="flex items-center gap-2 mb-3">
                <Eye size={16} className="text-gold-dark" />
                <h3 className="font-medium text-slate-700">Ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y</h3>
                <div className="flex-1"></div>
                <span className="text-xs text-slate-500">C·∫≠p nh·∫≠t {Math.floor((Date.now() - lastUpdate.getTime()) / 1000)}s tr∆∞·ªõc</span>
              </div>
              <div className="space-y-2 text-sm">
                <div className="flex items-center gap-3 py-2">
                  <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
                  <span className="text-slate-600">Gi√° SJC tƒÉng <span className="font-semibold text-green-600">+50,000ƒë</span> trong 15 ph√∫t qua</span>
                  <div className="flex-1"></div>
                  <span className="text-xs text-slate-400">2 ph√∫t tr∆∞·ªõc</span>
                </div>
                <div className="flex items-center gap-3 py-2">
                  <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                  <span className="text-slate-600">247 ng∆∞·ªùi v·ª´a xem b·∫£ng gi√° DOJI</span>
                  <div className="flex-1"></div>
                  <span className="text-xs text-slate-400">5 ph√∫t tr∆∞·ªõc</span>
                </div>
                <div className="flex items-center gap-3 py-2">
                  <div className="w-2 h-2 bg-orange-500 rounded-full"></div>
                  <span className="text-slate-600">Ch√™nh l·ªách SJC-Th·∫ø gi·ªõi: <span className="font-semibold text-orange-600">17.2M ƒë·ªìng/l∆∞·ª£ng</span></span>
                  <div className="flex-1"></div>
                  <span className="text-xs text-slate-400">8 ph√∫t tr∆∞·ªõc</span>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Main Content */}
        <div className="container mx-auto px-4 py-0 md:py-8">
          {/* Enhanced Search Bar */}
          <div className="mb-8">
            <form
              onSubmit={(e) => {
                e.preventDefault();
                if (searchInput.trim()) {
                  setSearchParams({ q: searchInput.trim() });
                }
              }}
              className="relative max-w-2xl mx-auto"
            >
              <div className="flex items-center gap-2 bg-white/90 backdrop-blur-sm border border-gold-light/40 rounded-2xl px-4 py-3 shadow-lg hover:shadow-xl transition-shadow">
                <SearchIcon size={20} className="text-gold-dark" aria-hidden="true" />
                <input
                  value={searchInput}
                  onChange={(e) => setSearchInput(e.target.value)}
                  type="search"
                  placeholder="T√¨m ki·∫øm: gi√° SJC, so s√°nh DOJI/PNJ, bi·ªÉu ƒë·ªì, tin t·ª©c..."
                  className="flex-1 bg-transparent focus:outline-none placeholder:text-slate-400 text-sm"
                  aria-label="√î t√¨m ki·∫øm n·ªôi dung"
                />
                <button type="submit" className="bg-gradient-to-r from-gold-dark to-gold text-white px-6 py-2 rounded-full font-medium hover:shadow-md transition-all">
                  T√¨m ki·∫øm
                </button>
              </div>
            </form>
          </div>
          {/* Enhanced Title Section */}
          <div className="flex flex-col sm:flex-row justify-between items-center mb-12">
            <div className="relative">
              <h1 className="text-3xl md:text-5xl font-bold font-playfair mb-4 sm:mb-0">
                <span className="bg-gradient-to-r from-gold-dark via-amber-600 to-gold bg-clip-text text-transparent">
                  Gi√° V√†ng 247 Online, C·∫≠p Nh·∫≠t 24/7
                </span>
              </h1>
              <div className="hidden md:block absolute -bottom-2 left-0 w-1/2 h-0.5 bg-gradient-to-r from-gold-dark to-transparent"></div>
              <p className="text-slate-600 mt-3 text-sm md:text-base max-w-lg">
                Th√¥ng tin gi√° v√†ng ch√≠nh x√°c t·ª´ SJC, DOJI, PNJ, BTMC v√† c√°c ƒë∆°n v·ªã uy t√≠n kh√°c
              </p>
            </div>
            <div className="flex items-center space-x-4">
              <button 
                onClick={handleShare}
                className="flex items-center gap-2 bg-white/80 backdrop-blur-sm px-4 py-2 rounded-full border border-gold-light/50 text-sm font-medium text-slate-700 hover:bg-gold-light/20 hover:border-gold transition-all duration-300 shadow-sm hover:shadow-lg group"
                aria-label="Chia s·∫ª th√¥ng tin gi√° v√†ng"
              >
                <Share2 size={16} className="text-gold-dark group-hover:scale-110 transition-transform" />
                <span>Chia s·∫ª</span>
              </button>
              <button 
                onClick={handleNotify}
                className="flex items-center gap-2 bg-gradient-to-r from-gold-dark to-gold text-white px-4 py-2 rounded-full text-sm font-medium hover:shadow-lg transition-all duration-300 group"
                aria-label="ƒêƒÉng k√Ω nh·∫≠n th√¥ng b√°o gi√° v√†ng"
              >
                <Bell size={16} className="group-hover:animate-bounce" />
                <span>Th√¥ng b√°o</span>
              </button>
            </div>
          </div>
          
          {/* Price Info Cards */}
          <div id="price-info" className="mb-16 relative">
            <div className="absolute -top-20 -right-20 bg-gradient-rich h-60 w-60 rounded-full blur-3xl opacity-20"></div>
            <div className="absolute -bottom-20 -left-20 bg-gradient-rich h-60 w-60 rounded-full blur-3xl opacity-20"></div>
            <div className="relative z-10 transform hover:scale-[1.01] transition-transform duration-500">
              <PriceInfo />
            </div>
          </div>
          
          {/* Gold Price Tabs with Time Filter */}
          <div className="mb-16 bg-gradient-to-b from-white to-gold-muted/10 pt-6 pb-10 px-6 rounded-3xl shadow-sm border border-gold-light/20">
            <div className="flex flex-col md:flex-row justify-between items-center mb-8">
              <div className="relative">
                <h2 className="text-2xl md:text-3xl font-bold mb-4 md:mb-0 font-playfair text-slate-800">
                  <span className="bg-gradient-to-r from-gold-dark via-amber-600 to-gold bg-clip-text text-transparent">
                    B·∫£ng Gi√° V√†ng Chi Ti·∫øt
                  </span>
                </h2>
                <div className="hidden md:block absolute -bottom-2 left-0 w-24 h-0.5 bg-gradient-to-r from-gold-dark to-transparent"></div>
              </div>
              <div className="bg-white/90 backdrop-blur-sm rounded-full p-1 border border-gold-light/30 shadow-md">
                <Tabs defaultValue="today" value={timeFilter} onValueChange={setTimeFilter}>
                  <TabsList className="bg-gold-muted/20" aria-label="Ch·ªçn kho·∫£ng th·ªùi gian">
                    <TabsTrigger 
                      value="today" 
                      className="text-xs md:text-sm font-medium"
                      aria-label="Xem gi√° v√†ng h√¥m nay"
                    >
                      H√¥m nay
                    </TabsTrigger>
                    <TabsTrigger 
                      value="week" 
                      className="text-xs md:text-sm font-medium"
                      aria-label="Xem gi√° v√†ng tu·∫ßn n√†y"
                    >
                      Tu·∫ßn n√†y
                    </TabsTrigger>
                    <TabsTrigger 
                      value="month" 
                      className="text-xs md:text-sm font-medium"
                      aria-label="Xem gi√° v√†ng th√°ng n√†y"
                    >
                      Th√°ng n√†y
                    </TabsTrigger>
                  </TabsList>
                </Tabs>
              </div>
            </div>
            <GoldTabs />
            <div className="text-right mt-6">
              <p className="text-xs text-slate-500 italic">Ngu·ªìn: SJC, DOJI, PNJ, BTMC, Mi H·ªìng, Ph√∫ Qu√Ω, Huy Thanh</p>
              <p className="text-xs text-slate-500">C·∫≠p nh·∫≠t: {formattedDateTime}</p>
            </div>
          </div>
          
          {/* Gold Comparison Tool - Unique Feature */}
          <div id="comparison" className="mb-16 relative">
            <div className="absolute -top-20 -left-20 bg-gradient-rich h-60 w-60 rounded-full blur-3xl opacity-20"></div>
            <div className="absolute -bottom-20 -right-20 bg-gradient-rich h-60 w-60 rounded-full blur-3xl opacity-20"></div>
            <div className="relative z-10 transform hover:scale-[1.01] transition-transform duration-500">
              <div className="flex flex-col items-center mb-8">
                <h2 className="text-2xl md:text-3xl font-bold mb-3 font-playfair text-center">
                  <span className="bg-gradient-to-r from-gold-dark via-amber-600 to-gold bg-clip-text text-transparent">
                    C√¥ng C·ª• So S√°nh Gi√° V√†ng
                  </span>
                </h2>
                <div className="w-24 h-0.5 bg-gradient-to-r from-transparent via-gold-dark to-transparent"></div>
                <p className="text-slate-600 mt-3 text-center max-w-2xl">
                  T√≠nh nƒÉng ƒë·ªôc ƒë√°o gi√∫p b·∫°n so s√°nh gi√° v√†ng gi·ªØa c√°c ƒë∆°n v·ªã kinh doanh, 
                  lo·∫°i v√†ng kh√°c nhau ho·∫∑c theo d√µi bi·∫øn ƒë·ªông gi√° qua th·ªùi gian
                </p>
              </div>
              <Suspense fallback={<div className="h-40 flex items-center justify-center"><div className="animate-spin rounded-full h-8 w-8 border-b-2 border-gold-dark" /></div>}>
                <GoldComparison />
              </Suspense>
            </div>
          </div>
          
          {/* Market Analysis */}
          <div className="mb-16 relative">
            <div className="absolute -bottom-10 right-10 bg-gradient-rich h-40 w-40 rounded-full blur-2xl opacity-20"></div>
            <div className="relative">
              <div className="flex flex-col items-center mb-8">
                <h2 className="text-2xl md:text-3xl font-bold mb-3 font-playfair text-center">
                  <span className="bg-gradient-to-r from-gold-dark via-amber-600 to-gold bg-clip-text text-transparent">
                    Ph√¢n T√≠ch & D·ª± B√°o Th·ªã Tr∆∞·ªùng
                  </span>
                </h2>
                <div className="w-24 h-0.5 bg-gradient-to-r from-transparent via-gold-dark to-transparent"></div>
              </div>
              <div className="transform hover:scale-[1.01] transition-transform duration-500">
                <Suspense fallback={<div className="h-40 flex items-center justify-center"><div className="animate-spin rounded-full h-8 w-8 border-b-2 border-gold-dark" /></div>}>
                  <MarketTrend />
                </Suspense>
              </div>
              <div className="text-center mt-8">
                <a 
                  href="/phan-tich" 
                  className="inline-flex items-center gap-2 px-6 py-2.5 bg-gradient-to-r from-gold-dark to-gold text-white rounded-full shadow-md hover:shadow-lg transition-all duration-300 font-medium"
                  aria-label="Xem th√™m ph√¢n t√≠ch chuy√™n s√¢u v·ªÅ th·ªã tr∆∞·ªùng v√†ng"
                >
                  Xem th√™m ph√¢n t√≠ch chuy√™n s√¢u
                  <ChevronRight size={16} aria-hidden="true" />
                </a>
              </div>
            </div>
          </div>
          
          {/* FAQ Section */}
          <div className="mb-16 bg-white/80 backdrop-blur-sm p-8 rounded-3xl shadow-md border border-gold-light/30" id="faq-section">
            <div className="flex flex-col items-center mb-8">
              <h2 className="text-2xl md:text-3xl font-bold mb-3 font-playfair text-center">
                <span className="bg-gradient-to-r from-gold-dark via-amber-600 to-gold bg-clip-text text-transparent">
                  C√¢u H·ªèi Th∆∞·ªùng G·∫∑p
                </span>
              </h2>
              <div className="w-24 h-0.5 bg-gradient-to-r from-transparent via-gold-dark to-transparent"></div>
            </div>
            <div className="space-y-5">
              <FaqItem 
                question="Gi√° v√†ng SJC h√¥m nay l√† bao nhi√™u?" 
                answer="Gi√° v√†ng SJC h√¥m nay ƒëang ·ªü m·ª©c 78,900,000 ƒë·ªìng/l∆∞·ª£ng (mua v√†o) v√† 80,900,000 ƒë·ªìng/l∆∞·ª£ng (b√°n ra). Gi√° c·∫≠p nh·∫≠t li√™n t·ª•c 24/7 tr√™n trang GiaVang247."
              />
              <FaqItem 
                question="L√†m th·∫ø n√†o ƒë·ªÉ theo d√µi bi·∫øn ƒë·ªông gi√° v√†ng?" 
                answer="B·∫°n c√≥ th·ªÉ theo d√µi bi·∫øn ƒë·ªông gi√° v√†ng qua bi·ªÉu ƒë·ªì ph√¢n t√≠ch tr√™n trang GiaVang247, c·∫≠p nh·∫≠t li√™n t·ª•c 24/7 v·ªõi d·ªØ li·ªáu t·ª´ c√°c nh√† cung c·∫•p uy t√≠n nh∆∞ SJC, DOJI, PNJ, B·∫£o T√≠n Minh Ch√¢u."
              />
              <FaqItem 
                question="Ch√™nh l·ªách gi·ªØa gi√° v√†ng SJC v√† v√†ng th·∫ø gi·ªõi l√† bao nhi√™u?" 
                answer="Hi·ªán t·∫°i, ch√™nh l·ªách gi·ªØa gi√° v√†ng SJC v√† gi√° v√†ng th·∫ø gi·ªõi dao ƒë·ªông t·ª´ 17-18 tri·ªáu ƒë·ªìng/l∆∞·ª£ng, cao h∆°n nhi·ªÅu so v·ªõi m·ª©c ch√™nh l·ªách b√¨nh th∆∞·ªùng trong c√°c nƒÉm tr∆∞·ªõc."
              />
            </div>
          </div>
          
          {/* Enhanced Newsletter Subscription */}
          <div className="mb-16 relative overflow-hidden">
            <div className="absolute inset-0 bg-gradient-to-br from-gold-light/30 via-gold/20 to-gold-muted/30 rounded-3xl"></div>
            <div className="absolute -top-10 -right-10 w-32 h-32 bg-gold-light/20 rounded-full blur-2xl"></div>
            <div className="absolute -bottom-10 -left-10 w-32 h-32 bg-gold-muted/20 rounded-full blur-2xl"></div>
            <div className="relative p-8 rounded-3xl shadow-lg border border-gold-light/40 backdrop-blur-sm">
              <div className="text-center mb-8">
                <div className="flex items-center justify-center gap-2 mb-3">
                  <Bell className="text-gold-dark animate-pulse" size={28} />
                  <h3 className="text-2xl md:text-3xl font-bold font-playfair text-slate-800">C·∫£nh b√°o gi√° v√†ng mi·ªÖn ph√≠</h3>
                </div>
                <p className="text-slate-600 max-w-2xl mx-auto">
                  Nh·∫≠n th√¥ng b√°o ngay khi gi√° v√†ng bi·∫øn ƒë·ªông <span className="font-semibold text-gold-dark">‚â• 100.000ƒë/l∆∞·ª£ng</span>
                  <br />
                  <span className="text-sm flex items-center justify-center gap-4 mt-2">
                    <span className="inline-flex items-center gap-1">
                      <Mail size={14} className="text-gold-dark" /> Qua email
                    </span>
                    <span className="inline-flex items-center gap-1">
                      <MessageSquare size={14} className="text-gold-dark" /> Telegram
                    </span>
                    <span className="inline-flex items-center gap-1">
                      <CheckCircle size={14} className="text-gold-dark" /> Ho√†n to√†n mi·ªÖn ph√≠
                    </span>
                  </span>
                </p>
              </div>
              <form className="flex flex-col sm:flex-row gap-3 max-w-md mx-auto">
                <input 
                  type="email" 
                  placeholder="email@example.com" 
                  aria-label="Nh·∫≠p email ƒë·ªÉ ƒëƒÉng k√Ω"
                  className="flex-1 px-5 py-3 border border-gold-light/50 rounded-xl focus:outline-none focus:ring-2 focus:ring-gold focus:border-transparent shadow-inner bg-white/90"
                  required
                />
                <button 
                  type="submit"
                  className="bg-gradient-to-r from-gold-dark to-gold text-white px-8 py-3 rounded-xl font-medium hover:shadow-xl hover:scale-105 transition-all duration-300 whitespace-nowrap"
                  aria-label="ƒêƒÉng k√Ω nh·∫≠n c·∫£nh b√°o gi√° v√†ng"
                >
                  ƒêƒÉng k√Ω ngay
                </button>
              </form>
              <div className="flex items-center justify-center gap-4 text-xs text-slate-500 mt-4">
                <span className="inline-flex items-center gap-1">
                  <CheckCircle size={12} className="text-green-500" /> Kh√¥ng spam
                </span>
                <span className="inline-flex items-center gap-1">
                  <CheckCircle size={12} className="text-green-500" /> C√≥ th·ªÉ h·ªßy b·∫•t k·ª≥ l√∫c n√†o
                </span>
                <span className="inline-flex items-center gap-1">
                  <CheckCircle size={12} className="text-green-500" /> B·∫£o m·∫≠t th√¥ng tin
                </span>
              </div>
            </div>
          </div>
        </div>
      </main>

        {/* Price Alert Modal */}
        <Dialog open={showPriceAlert} onOpenChange={setShowPriceAlert}>
          <DialogContent className="max-w-md mx-auto">
            <DialogHeader>
              <DialogTitle className="flex items-center gap-2">
                <Bell className="text-gold-dark" size={24} />
                Thi·∫øt l·∫≠p c·∫£nh b√°o gi√° v√†ng
              </DialogTitle>
            </DialogHeader>
            <form onSubmit={handlePriceAlertSubmit} className="space-y-4">
              <div>
                <label className="text-sm font-medium text-slate-700 mb-2 block">
                  Email nh·∫≠n th√¥ng b√°o
                </label>
                <Input
                  type="email"
                  placeholder="email@example.com"
                  value={alertEmail}
                  onChange={(e) => setAlertEmail(e.target.value)}
                  required
                />
              </div>
              <div>
                <label className="text-sm font-medium text-slate-700 mb-2 block">
                  C·∫£nh b√°o khi gi√° thay ƒë·ªïi ‚â•
                </label>
                <div className="relative">
                  <Input
                    type="number"
                    placeholder="100000"
                    value={alertThreshold}
                    onChange={(e) => setAlertThreshold(e.target.value)}
                    required
                  />
                  <span className="absolute right-3 top-1/2 -translate-y-1/2 text-sm text-slate-500">
                    ƒë·ªìng/l∆∞·ª£ng
                  </span>
                </div>
              </div>
              <div className="bg-gold-light/10 p-3 rounded-lg text-sm text-slate-600">
                <div className="flex items-center gap-2 mb-2">
                  <Star size={14} className="text-gold-dark" />
                  <span className="font-medium">T√≠nh nƒÉng Premium</span>
                </div>
                <ul className="space-y-1 text-xs">
                  <li>‚Ä¢ Th√¥ng b√°o qua Email + Telegram</li>
                  <li>‚Ä¢ C·∫£nh b√°o trong v√≤ng 30 gi√¢y</li>
                  <li>‚Ä¢ Ph√¢n t√≠ch xu h∆∞·ªõng t·ª± ƒë·ªông</li>
                </ul>
              </div>
              <div className="flex gap-3">
                <Button
                  type="button"
                  variant="outline"
                  onClick={() => setShowPriceAlert(false)}
                  className="flex-1"
                >
                  H·ªßy
                </Button>
                <Button
                  type="submit"
                  className="flex-1 bg-gradient-to-r from-gold-dark to-gold hover:shadow-lg"
                >
                  ƒêƒÉng k√Ω ngay
                </Button>
              </div>
            </form>
          </DialogContent>
        </Dialog>

        {/* Mobile Sticky Bottom Action Bar */}
        <div className="md:hidden fixed bottom-4 inset-x-0 px-4 z-40">
          <div className="mx-auto max-w-sm bg-white/95 backdrop-blur-md border border-gold-light/40 shadow-xl rounded-2xl flex items-center justify-between px-4 py-2">
            <button onClick={handleNotify} className="flex flex-col items-center gap-1 px-3 py-1.5 rounded-xl hover:bg-gold-light/20 transition-colors">
              <Bell size={16} className="text-gold-dark" />
              <span className="text-xs text-slate-600">B√°o gi√°</span>
            </button>
            <a href="/gold-chart" className="flex flex-col items-center gap-1 px-3 py-1.5 rounded-xl hover:bg-gold-light/20 transition-colors">
              <TrendingUp size={16} className="text-gold-dark" />
              <span className="text-xs text-slate-600">Bi·ªÉu ƒë·ªì</span>
            </a>
            <a href="#faq-section" className="flex flex-col items-center gap-1 px-3 py-1.5 rounded-xl hover:bg-gold-light/20 transition-colors">
              <SearchIcon size={16} className="text-gold-dark" />
              <span className="text-xs text-slate-600">FAQ</span>
            </a>
            <button onClick={handleShare} className="flex flex-col items-center gap-1 px-3 py-1.5 rounded-xl hover:bg-gold-light/20 transition-colors">
              <Share2 size={16} className="text-gold-dark" />
              <span className="text-xs text-slate-600">Chia s·∫ª</span>
            </button>
          </div>
        </div>
      
        <Footer />
      </div>
    </GoldPriceProvider>
  );
};


export default Index;
